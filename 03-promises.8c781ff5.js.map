{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAOC,GAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,uBAAqBL,EAAY,QAASD,QAGlDO,EAAO,sBAAoBN,EAAU,QAASD,UAE/CA,MAEFS,MAAKC,GAASb,EAAAc,OAAOC,QAAQF,KAC7BG,OAAMC,GAASjB,EAAAc,OAAOI,QAAQD,KAvCnBE,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAA0BC,GACxBA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAC1BC,EAAc,GACpBH,EAASI,SAAQ,CAACf,EAAOgB,KACvBF,EAAYE,GAAOC,OAAOjB,MAM9B,UAAqBV,MAAEA,EAAK4B,KAAEA,EAAIC,OAAEA,IAClC,MAKMC,EALcC,MAAMC,KACxB,CAAEC,OAAQJ,IACV,CAACK,EAAGC,IAAMnC,EAAQmC,EAAIP,IAGKQ,IAAIrC,GACjCsC,QAAQC,IAAIR,GAVZS,CAAYf","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onPromisesSubmit);\n\nfunction onPromisesSubmit(e) {\n  e.preventDefault();\n  const formData = new FormData(e.currentTarget);\n  const formDataObj = {};\n  formData.forEach((value, key) => {\n    formDataObj[key] = Number(value);\n  });\n\n  createArray(formDataObj);\n}\n\nfunction createArray({ delay, step, amount }) {\n  const delaysArray = Array.from(\n    { length: amount },\n    (_, i) => delay + i * step\n  );\n\n  const promises = delaysArray.map(createPromise);\n  console.log(promises);\n}\n\nfunction createPromise(delay, position) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promice ${position + 1} in ${delay} ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promice ${position + 1} in ${delay} ms`);\n      }\n    }, delay);\n  })\n    .then(value => Notify.success(value))\n    .catch(error => Notify.failure(error));\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","delay","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","Notify","success","catch","error","failure","document","querySelector","addEventListener","e","preventDefault","formData","FormData","currentTarget","formDataObj","forEach","key","Number","step","amount","promises","Array","from","length","_","i","map","console","log","$47d4ff9957288465$var$createArray"],"version":3,"file":"03-promises.8c781ff5.js.map"}